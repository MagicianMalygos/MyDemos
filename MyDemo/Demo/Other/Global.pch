//
//  Global.pch
//  Demo
//
//  Created by apple on 16/3/10.
//  Copyright © 2016年 zcp. All rights reserved.
//

#ifndef Global_pch
#define Global_pch

#import "ZCPBasicHeader.h"

// Block循环引用
#define WEAK_SELF __weak typeof(self)weakSelf = self
#define STRONG_SELF __strong typeof(weakSelf)self = weakSelf

// size
// 屏幕宽度
#define SCREENWIDTH                                 [[UIScreen mainScreen] bounds].size.width
//屏幕高度
#define SCREENHEIGHT                                [[UIScreen mainScreen] bounds].size.height
#define APPLICATIONWIDTH                            [UIScreen mainScreen].applicationFrame.size.width
#define APPLICATIONHEIGHT                           [UIScreen mainScreen].applicationFrame.size.height

// Log
#define ZCPLog(FORMAT, ...) fprintf(stderr,"\n> > > > > > > > > > > > > > > ZCPLog\n%s:%d\n%s\n< < < < < < < < < < < < < < <\n\n",[[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String], __LINE__, [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);

// 忽略PerformSelectorleak警告宏
#define SuppressPerformSelectorLeakWarning(Stuff) \
do { \
    _Pragma("clang diagnostic push") \
    _Pragma("clang diagnostic ignored \"-Warc-performSelector-leaks\"") \
    _Pragma("clang diagnostic ignored \"-Wundeclared-selector\"") \
    Stuff; \
    _Pragma("clang diagnostic pop") \
} while (0)

// 生成a-b随机数
#define RANDOM(a, b) (arc4random() % ((b) - (a) + 1)) + (a)
// 生成随机颜色
#define RANDOM_COLOR [UIColor colorWithRed:arc4random() % 10 / 10.0f green:arc4random() % 10 / 10.0f blue:arc4random() % 10 / 10.0f alpha:1.0f]

// share相关
#import "WeiboSDK.h"
#define kAppKey         @"2163609371"
#define kSecret         @"fe34b6ef5a554531acdc9970fa811db5"
#define kRedirectURI    @"https://itunes.apple.com.cn"


// 时间性能测量用
// 结束时间除以CLOCKS_PER_SEC得到耗时秒数
/*
 例子：
 START_COUNT_TIME(start);
 staticDateFormatter = [[NSDateFormatter alloc] init];
 TTDPRINT(@"init date formatter use %f seconds", (float)END_COUNT_TIME(start)/CLOCKS_PER_SEC);
 */
#define START_COUNT_TIME(start)         clock_t start = clock()
#define END_COUNT_TIME(start)           (clock() - start)

// 懒加载宏
// 失败了，只要写了类似：@[@"", @""]的代码就会报错，编译器会认为‘,’是参数分隔符
//#define LAZY_POINTER(name, type, content) \
//- (type *)name { \
//    if (!_##name) { \
//        ( \
//            content \
//        ); \
//    } \
//    return _##name; \
//}
//
//#define LAZY_BASIC(name, type, content) \
//- (type)name { \
//    if (!_##name) { \
//        ( \
//            content; \
//        ); \
//    } \
//    return _##name; \
//}

#endif /* Global_pch */
