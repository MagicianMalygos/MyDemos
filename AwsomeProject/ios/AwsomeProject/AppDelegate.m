/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

#import "AppDelegate.h"

#import "RCTRootView.h"
#import "ViewController_CSS.h"
#import "ViewController_MT.h"
#import "ViewController_XC.h"
#import "ViewController_UIExplorer.h"
#import "ViewController_CustomUI.h"
#import "ViewController_ScrollTab.h"
#import "ViewController_Navigator.h"
#import "ViewController_Bridge.h"
#import "ViewController_ListView.h"

@implementation AppDelegate

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
  NSURL *jsCodeLocation;

  /**
   * Loading JavaScript code - uncomment the one you want.
   *
   * OPTION 1
   * Load from development server. Start the server from the repository root:
   *
   * $ npm start
   *
   * To run on device, change `localhost` to the IP address of your computer
   * (you can get this by typing `ifconfig` into the terminal and selecting the
   * `inet` value under `en0:`) and make sure your computer and iOS device are
   * on the same Wi-Fi network.
   */

  jsCodeLocation = [NSURL URLWithString:@"http://localhost:8089/index.ios.bundle?platform=ios&dev=true"];

  /**
   * OPTION 2
   * Load from pre-bundled file on disk. The static bundle is automatically
   * generated by "Bundle React Native code and images" build step.
   */

//   jsCodeLocation = [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];

  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
                                                      moduleName:@"AwsomeProject"
                                               initialProperties:nil
                                                   launchOptions:launchOptions];

  self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
  UIViewController *rootViewController = [UIViewController new];
  rootViewController.view = rootView;
  self.window.rootViewController = rootViewController;
  [self.window makeKeyAndVisible];
  
#pragma mark - 跳转
  // 跳转到vc_css
  UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
  button.frame = CGRectMake(0, 20, 50, 50);
  button.backgroundColor = [UIColor redColor];
  [button addTarget:self
             action:@selector(jumpVC_CSS)
   forControlEvents:UIControlEventTouchUpInside];
  [rootView addSubview:button];
  
  // 跳转到vc_mt
  UIButton *button2 = [UIButton buttonWithType:UIButtonTypeCustom];
  button2.frame = CGRectMake(100, 20, 50, 50);
  button2.backgroundColor = [UIColor yellowColor];
  [button2 addTarget:self
              action:@selector(jumpVC_MT)
    forControlEvents:UIControlEventTouchUpInside];
  [rootView addSubview:button2];
  
  // 跳转到vc_xc
  UIButton *button3 = [UIButton buttonWithType:UIButtonTypeCustom];
  button3.frame = CGRectMake(200, 20, 50, 50);
  button3.backgroundColor = [UIColor blueColor];
  [button3 addTarget:self
              action:@selector(jumpVC_XC)
    forControlEvents:UIControlEventTouchUpInside];
  [rootView addSubview:button3];
  
  // 跳转到vc_UIExplorer
  UIButton *button4 = [UIButton buttonWithType:UIButtonTypeCustom];
  button4.frame = CGRectMake(300, 20, 50, 50);
  button4.backgroundColor = [UIColor greenColor];
  [button4 addTarget:self action:@selector(jumpVC_UIExplorer) forControlEvents:UIControlEventTouchUpInside];
  [rootView addSubview:button4];
  
  // 跳转到vc_CustomUI
  UIButton *button5 = [UIButton buttonWithType:UIButtonTypeCustom];
  button5.frame = CGRectMake(0, 100, 50, 50);
  button5.backgroundColor = [UIColor cyanColor];
  [button5 addTarget:self action:@selector(jumpVC_CustomUI) forControlEvents:UIControlEventTouchUpInside];
  [rootView addSubview:button5];
  
  // 跳转到vc_ScrollTab
  UIButton *button6 = [UIButton buttonWithType:UIButtonTypeCustom];
  button6.frame = CGRectMake(100, 100, 50, 50);
  button6.backgroundColor = [UIColor magentaColor];
  [button6 addTarget:self action:@selector(jumpVC_ScrollTab) forControlEvents:UIControlEventTouchUpInside];
  [rootView addSubview:button6];
  
  // 跳转到vc_Navigator
  UIButton *button7 = [UIButton buttonWithType:UIButtonTypeCustom];
  button7.frame = CGRectMake(200, 100, 50, 50);
  button7.backgroundColor = [UIColor blackColor];
  [button7 addTarget:self action:@selector(jumpVC_Navigator) forControlEvents:UIControlEventTouchUpInside];
  [rootView addSubview:button7];
  
  // 跳转到vc_bridge
  UIButton *button8 = [UIButton buttonWithType:UIButtonTypeCustom];
  button8.frame = CGRectMake(300, 100, 50, 50);
  button8.backgroundColor = [UIColor groupTableViewBackgroundColor];
  [button8 addTarget:self action:@selector(jumpVC_Bridge) forControlEvents:UIControlEventTouchUpInside];
  [rootView addSubview:button8];
  
  // 跳转到vc_listview
  UIButton *button9 = [UIButton buttonWithType:UIButtonTypeCustom];
  button9.frame = CGRectMake(0, 180, 50, 50);
  button9.backgroundColor = [UIColor brownColor];
  [button9 addTarget:self action:@selector(jumpVC_ListView) forControlEvents:UIControlEventTouchUpInside];
  [rootView addSubview:button9];
  
  return YES;
}

- (void)jumpVC_CSS {
  [self.window.rootViewController presentViewController:[ViewController_CSS new]
                                               animated:YES
                                             completion:nil];
}
- (void)jumpVC_MT {
  [self.window.rootViewController presentViewController:[ViewController_MT new]
                                               animated:YES
                                             completion:nil];
}
- (void)jumpVC_XC {
  [self.window.rootViewController presentViewController:[ViewController_XC new]
                                               animated:YES
                                             completion:nil];
}
- (void)jumpVC_UIExplorer {
  [self.window.rootViewController presentViewController:[ViewController_UIExplorer new]
                                               animated:YES
                                             completion:nil];
}
- (void)jumpVC_CustomUI {
  [self.window.rootViewController presentViewController:[ViewController_CustomUI new]
                                               animated:YES
                                             completion:nil];
}
- (void)jumpVC_ScrollTab {
  [self.window.rootViewController presentViewController:[ViewController_ScrollTab new]
                                               animated:YES
                                             completion:nil];
}
- (void)jumpVC_Navigator {
  [self.window.rootViewController presentViewController:[ViewController_Navigator new]
                                               animated:YES
                                             completion:nil];
}
- (void)jumpVC_Bridge {
  [self.window.rootViewController presentViewController:[ViewController_Bridge new]
                                               animated:YES
                                             completion:nil];
}
- (void)jumpVC_ListView {
  [self.window.rootViewController presentViewController:[ViewController_ListView new]
                                               animated:YES
                                             completion:nil];
}

@end
